{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["viewUtilities","Cytoscape","jquery","App","state","selection","_handleCyCalled","handleCy","cy","_this","_cy","layout","name","props","dataset","on","event","setState","target","data","selectedEles","$","reduce","accumulator","ele","push","api","neighbor","node","closedNeighborhood","union","successors","predecessors","neighborSelectTime","run","enableMarqueeZoom","length","zoom","level","position","console","log","zoomToSelected","e","disableMarqueeZoom","marqueeZoom","highlightNeighbors","removeHighlights","hideSelected","nodesWithHiddenNeighbor","edges","connectedNodes","thinBorder","hide","thickenBorder","hideUnSelected","showAll","show","elements","redraw","remove","help","window","M","toast","html","_this2","this","fetch","url","then","response","json","eles","forEach","defaultBorderWidth","Number","css","substring","react_default","a","createElement","columns","map","key","Header","accessor","className","href","onClick","react_cytoscape_default","stylesheet","selector","style","opacity","shape","width","height","display","overflow","es","React","Component","Boolean","location","hostname","match","graph","document","getElementById","ReactDOM","render","src_App","addEventListener","attachEvent","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f92aadfb.chunk.js","sourcesContent":["/* eslint-disable anchor-is-valid */\n\nimport React from 'react';\n\nimport CytoscapeComponent from 'react-cytoscapejs';\n\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css'\n\nimport Cytoscape from 'cytoscape';\nimport jquery from 'jquery';\nimport viewUtilities from 'cytoscape-view-utilities';\nviewUtilities(Cytoscape, jquery)\n\nclass App extends React.Component {\n\n  state = {\n      // selected node or edge\n      selection: []\n  }\n  _handleCyCalled = false;\n\n  componentDidMount() {\n    // get data, assumed to be cytoscape friendly, parse into an array of obj\n    fetch(this.props.dataset.url)\n      .then(response => response.json())\n      .then(data => {\n          this.setState({ 'elements': data })\n      });\n  }\n\n  handleCy = cy => {\n    // cy setup\n    if (cy === this._cy && this._handleCyCalled) {\n      return;\n    }\n    this._cy = cy;\n    this._handleCyCalled = true;\n    this.layout= cy.layout(\n      {name: this.props.dataset.layout}\n    )\n    cy.on('tap', 'edge', event => {\n      this.setState({ selection: [event.target.data()] });\n    })\n    cy.on('tap', 'node', event => {\n      this.setState({ selection: [event.target.data()] });\n    })\n    cy.on('select', event => {\n      // get the graph data behind all selected elements\n      var selectedEles = this._cy.$(\":selected\");\n      const reducer = (accumulator, ele) => {\n        if (ele) {\n            accumulator.push(ele.data());\n        }\n        return accumulator;\n      }\n      this.setState({ 'selection': selectedEles.reduce(reducer,[]) })\n    })\n    this.api = cy.viewUtilities({\n        neighbor: function(node){\n            // get entire 'traversal'\n            return node.closedNeighborhood().union(\n              node.successors()\n            ).union(\n              node.predecessors()\n            );\n        },\n        neighborSelectTime: 500\n    });\n\n    this.layout.run()\n    this.api.enableMarqueeZoom();\n\n    var selectedEles = cy.$(\":selected\");\n    if (selectedEles.length > 0) {\n      cy.zoom({\n        level: .40,\n        position: selectedEles[0].position()\n      });\n      this.setState({ selection: [selectedEles[0].data()] });\n    } else {\n      console.log('no selected element at startup')\n    }\n\n  }\n\n  //\n  // button handlers\n  //\n  // Increase border width to show nodes with hidden neighbors\n  thickenBorder(eles){\n    eles.forEach(function( ele ){\n      var defaultBorderWidth = Number(ele.css(\"border-width\").substring(0,ele.css(\"border-width\").length-2));\n      ele.css(\"border-width\", defaultBorderWidth + 2);\n    });\n    return eles;\n  }\n  // Decrease border width when hidden neighbors of the nodes become visible\n  thinBorder(eles){\n    eles.forEach(function( ele ){\n      var defaultBorderWidth = Number(ele.css(\"border-width\").substring(0,ele.css(\"border-width\").length-2));\n      ele.css(\"border-width\", defaultBorderWidth - 2);\n    });\n    return eles;\n  }\n  zoomToSelected = e => {\n    this.api.disableMarqueeZoom();\n    var selectedEles = this._cy.$(\":selected\");\n    this.api.zoomToSelected(selectedEles);\n  }\n  marqueeZoom = e => {\n    this.api.enableMarqueeZoom();\n  }\n  highlightNeighbors = e => {\n    this.api.disableMarqueeZoom();\n    if(this._cy.$(\":selected\").length > 0){\n      this.api.highlightNeighbors(this._cy.$(\":selected\"));\n    }\n\n  }\n  removeHighlights = e => {\n    this.api.disableMarqueeZoom();\n    this.api.removeHighlights();\n  }\n  hideSelected = e => {\n    this.api.disableMarqueeZoom();\n    var nodesWithHiddenNeighbor = this._cy.edges(\":hidden\").connectedNodes(':visible');\n    this.thinBorder(nodesWithHiddenNeighbor);\n    this.api.hide(this._cy.$(\":selected\"));\n    nodesWithHiddenNeighbor = this._cy.edges(\":hidden\").connectedNodes(':visible');\n    this.thickenBorder(nodesWithHiddenNeighbor);\n  }\n  hideUnSelected = e => {\n    this.api.disableMarqueeZoom();\n    var nodesWithHiddenNeighbor = this._cy.edges(\":hidden\").connectedNodes(':visible');\n    this.thinBorder(nodesWithHiddenNeighbor);\n    this.api.hide(this._cy.$(\":unselected\"));\n    nodesWithHiddenNeighbor = this._cy.edges(\":hidden\").connectedNodes(':visible');\n    this.thickenBorder(nodesWithHiddenNeighbor);\n  }\n  showAll = e => {\n    this.api.disableMarqueeZoom();\n    var nodesWithHiddenNeighbor = this._cy.edges(\":hidden\").connectedNodes(':visible');\n    this.thinBorder(nodesWithHiddenNeighbor);\n    this.api.show(this._cy.elements());\n  }\n  redraw = e => {\n    this._cy.remove(\":hidden\")\n    this._cy.remove( this._cy.edges(\":hidden\") )\n    this.layout = this._cy.layout(\n      {name: this.props.dataset.layout}\n    )\n    this.layout.run();\n  }\n  help = e => {\n    window.M.toast({html: '<i>SHIFT + drag to specify region.  SHIFT + taphold to select neighbors</i>'})\n  }\n\n  render() {\n    if (! this.state.elements) {\n        return <div/>;\n    }\n\n    const keys = ['_label', 'cmd', 'path'];\n    const columns = keys.map((key) => {return { Header: key, accessor: key }});\n\n    return <div >\n    <div>\n      <nav>\n        <div className=\"nav-wrapper\">\n          <ul className=\"hide-on-med-and-down\">\n            <li><a href=\"#/\" onClick={this.hideSelected}><i className=\"fas fa-eye left\"></i>Hide Selected</a></li>\n            <li><a href=\"#/\" onClick={this.hideUnSelected}><i className=\"fas fa-eye-slash left\"></i>Hide Unselected</a></li>\n            <li><a href=\"#/\" onClick={this.showAll}><i className=\"material-icons left\">all_inclusive</i>Show All</a></li>\n            <li><a href=\"#/\" onClick={this.zoomToSelected}><i className=\"material-icons left\">zoom_in</i>Zoom To Selected</a></li>\n            <li><a href=\"#/\" onClick={this.marqueeZoom}><i className=\"material-icons left\">select_all</i>Marquee Zoom</a></li>\n            <li><a href=\"#/\" onClick={this.highlightNeighbors}><i className=\"fas fa-highlighter left\"></i>Highlight Neighbors</a></li>\n            <li><a href=\"#/\" onClick={this.removeHighlights}>\n              <i className=\"far fa-highlighter left\"></i>\n              Remove Highlights</a></li>\n            <li><a href=\"#/\" onClick={this.redraw}><i className=\"material-icons left\">refresh</i>Re-Draw</a></li>\n            <li><a href=\"#/\" onClick={this.help}><i className=\"material-icons left\">help</i>Help</a></li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n\n    <div>\n      <CytoscapeComponent\n        elements={this.state.elements}\n        stylesheet={[\n          {\n            selector: 'node.unhighlighted',\n            style: {\n              opacity: 0.3\n            }\n          },\n          {\n            selector: 'edge.unhighlighted',\n            style: {\n              opacity: 0.3\n            }\n          },\n          {\n            selector: 'node[path]',\n            style: {\n              shape: 'barrel'\n            }\n          },\n          {\n            selector: 'node[cmd]',\n            style: {\n              shape: 'triangle'\n            }\n          },\n          {\n            selector: 'edge',\n            style: {\n              width: 1\n            }\n          }\n        ]}\n        style={ {\n          height:  this.props.dataset.height,\n          width: this.props.dataset.width,\n          display: 'block',\n          overflow: 'scroll'\n        } }\n        cy={this.handleCy}\n      />\n    </div>\n\n    <div>\n      <ReactTable\n        data={ this.state.selection }\n        columns = { columns }\n      />\n    </div>\n    </div>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nfunction run() {\n  // get div where Graph should be rendered\n  const graph = document.getElementById('graph')\n  if (graph) {\n    // get parameters set by caller on element data-* attributes\n    const dataset = graph.dataset ;\n    ReactDOM.render(<App dataset={dataset}/>, graph);\n  }\n}\n\n// mount react on page load\nif (window.addEventListener) {\n  window.addEventListener('DOMContentLoaded', run);\n} else {\n  window.attachEvent('onload', run);\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}